# WARNING: config.yml file is generated from config.yml.jinja
version: 2
jobs:
    build:
        resource_class: large
        docker:
        - image: codaprotocol/coda:toolchain-e11592718bee89d2a4facfa7ca209844fa7b140c
        steps:
            - checkout
            - run:
                name: Lint
                command: eval `opam config env` && make check-format
            - run:
                name: Build Haskell
                command: source ~/.profile && make kademlia
            - run:
                name: Build OCaml
                command: eval `opam config env` && DUNE_PROFILE=dev make build 2>&1 | tee /tmp/buildocaml.log
            - run:
                name: rm snark_params
                command: rm -rf src/_build/default/lib/snark_params
            - run:
                name: Build Website -- make web
                command: make web
            - run:
                name: Count OCaml Warns
                command: ./scripts/buildwarns.py /tmp/buildocaml.log
            - run:
                name: Build deb Package
                command: make deb
            - store_artifacts:
                path: /tmp/artifacts

    build_withsnark:
        resource_class: large
        docker:
        - image: codaprotocol/coda:toolchain-e11592718bee89d2a4facfa7ca209844fa7b140c
        steps:
            - checkout
            - run:
                name: Build Haskell
                command: source ~/.profile && make kademlia
            - run:
                name: Enable snarks --  make withsnark
                command: make withsnark
            - run:
                name: Get Proving Keys -- make withkeys
                command: make withkeys
            - run:
                name: Build OCaml
                command: eval `opam config env` && DUNE_PROFILE=testnet make build 2>&1 | tee /tmp/buildocaml.log
            - run:
                name: Build deb Package with verification keys
                command: make deb
            - run:
                name: Build provingkeys
                command: make provingkeys
            - run:
                name: Store Genesis keys
                command: make genesiskeys
            - store_artifacts:
                path: /tmp/artifacts

    build_public:
        resource_class: large
        docker:
        - image: codaprotocol/coda:toolchain-e11592718bee89d2a4facfa7ca209844fa7b140c
        steps:
            - checkout
            - run:
                name: Build Haskell
                command: source ~/.profile && make kademlia
            - run:
                name: Enable snarks --  make withsnark
                command: make withsnark
            - run:
                name: Get Proving Keys -- make withkeys
                command: make withkeys
            - run:
                name: Build OCaml
                command: eval `opam config env` && DUNE_PROFILE=testnet_public make build 2>&1 | tee /tmp/buildocaml.log
            - run:
                name: Build deb Package with verification keys
                command: make deb
            - run:
                name: Store Genesis keys
                command: make genesiskeys
            - store_artifacts:
                path: /tmp/artifacts

    test-unit-test:
       resource_class: large
       docker:
       - image: codaprotocol/coda:toolchain-e11592718bee89d2a4facfa7ca209844fa7b140c
       steps:
           - checkout
           - run:
               name: Build Haskell
               command: source ~/.profile && make kademlia
           - run:
               name: Get stable SNARK keys - make withkeys
               command: source ~/.profile && make withkeys
           - run:
              name: Test make test-runtest
              command: source ~/.profile && make test-runtest

    test-withsnark:
        resource_class: large
        docker:
        - image: codaprotocol/coda:toolchain-e11592718bee89d2a4facfa7ca209844fa7b140c
        steps:
            - checkout
            - run:
                name: Build Haskell
                command: source ~/.profile && make kademlia
            - run:
                name: Enable snarks --  make withsnark
                command: make withsnark
            - run:
                name: Build OCaml
                command: eval `opam config env` && make build 2>&1 | tee /tmp/buildocaml.log
            - run:
                name: Test make test-withsnark
                command: source ~/.profile && make test-withsnark

    {%for test in tests%}
    test-{{test.name}}:
      resource_class: large
      docker:
      - image: codaprotocol/coda:toolchain-e11592718bee89d2a4facfa7ca209844fa7b140c
      steps:
          - checkout
          - run:
              name: Check .circleci Render
              command: make check-render-circleci
          - run:
              name: Build Haskell
              command: source ~/.profile && make kademlia
          - run:
              name: Build OCaml
              command: eval `opam config env` && DUNE_PROFILE=test make build 2>&1 | tee /tmp/buildocaml.log
            {% for action in test.actions %}
          - run:
              name: Running test - {{ test.friendly }} | {{ action }}
              command: source ~/.profile && source scripts/test_all.sh && cd src/ && {{test.env_str}} 'run_integration_test' '{{ action }}' {% endfor %}
      {% endfor %}

workflows:
    version: 2
    coda_parallel:
        jobs:
            - build
            - build_withsnark
            - build_public
            {%for test in tests%}
            - test-{{test.name}}
            {%endfor%}
            - test-withsnark
            - test-unit-test
    # NOTES: Save this idea for later (nightly/scheduled workflows)
    # nightly:
    #     triggers:
    #         - schedule:
    #             cron: "0 0 * * *"
    #             filters:
    #                 branches:
    #                     only: master
    #     jobs:
    #         - build_withsnark
